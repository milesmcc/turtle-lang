(add 1 1)
(add 1 5)
(add 1 2 3)
(type 1)
(eq (type 1) (type -55.3))
(eq (type 1) :number)
(mult 5 5)
(exp 2 0)
(exp 2 1)
(exp 2.2e-3 -1)
(modulo 55 1)
(modulo 11 2)
(modulo 55.3 2)
(gt 3 5 8 9)
(gt 4 8 5 3)
(ge 3 3 5 8)
(ge 3 3 5 3)
(eq 5 5)
(eq 55 50)
(disp 424242)
(add 55 -1)
(label 'sub1 (lambda (x) (disp x) (cond ((eq x 0) x) ('t (sub1 (add x -1))))))
(sub1 55)